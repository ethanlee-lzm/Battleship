{"version":3,"sources":["style.js","components/Header.jsx","components/Gameboard.jsx","factories/createGameboard.js","factories/createPlayer.js","factories/createShip.js","components/Game.jsx","components/Menu.jsx","components/GameOver.jsx","components/logos/Github.js","components/FooterLinks.js","components/Footer.js","components/App.jsx","index.js"],"names":["GlobalStyle","createGlobalStyle","Nav","styled","nav","Title","h1","Logo","img","Container","section","Notification","div","BoardContainer","Board","table","Heading","Cell","td","props","isActive","isLabel","isInteractive","FlexibleFormat","BlurBackground","Button","button","margin","Text","p","TooltipContainer","span","FooterComponent","FooterText","FooterLinksDiv","Header","src","alt","Gameboard","title","board","receivedAttacks","clickHandler","isLabelled","areShipsHidden","getAttack","x","y","find","attack","getIcon","isSuccess","map","label","i","row","j","cell","onClick","createGameboard","size","gameboard","Array","from","length","ships","attacks","getBoard","getAttacks","place","ship","isHorizontal","includes","undefined","Error","parseInt","hit","isSunk","xx","yy","tempBoard","push","receiveAttack","getShipPosition","allShipsSunk","every","createPlayer","player","isRobot","Object","prototype","toString","call","slice","cells","forEach","_","fixedAttack","filter","randomAttack","Math","floor","random","getName","getType","getCells","takeAttack","createShip","state","position","reduce","sum","el","Game","endGame","useState","human","robot","gameboards","setGameboards","isHumanTurn","setIsHumanTurn","setAttacks","useEffect","hasPlaced","isHor","e","setTimeout","Menu","startGame","setGameboard","setShips","setIsHorizontal","isFinishedPlacing","setIsFinishedPlacing","setIsInteractive","isTooltipVisible","setIsTooltipVisible","tempGameboard","MouseTooltip","visible","offsetX","offsetY","width","GameOver","isHumanWinner","SVG","svg","SvgGithub","href","xmlns","viewBox","height","fill","d","FooterLinks","Github","Footer","App","start","game","end","gameState","setGameState","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa4e5735.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Lato', roboto;\r\n  }\r\n  body {\r\n    background-color: #111;\r\n    overflow: hidden;\r\n  }\r\n  :root {\r\n    --primary-color: #286bad;\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  text-align: center;\r\n  padding-top: 3em;\r\n  margin: 0.5em 0;\r\n  position: relative;\r\n\r\n  @media (min-width: 700px) {\r\n    margin: 2em 0;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: var(--primary-color);\r\n  font-family: 'Anton';\r\n  font-size: 2em;\r\n  letter-spacing: 5px;\r\n  text-shadow: 3px 3px rgba(0, 0, 0, 0.5);\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 3em;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  filter: invert(35%) sepia(63%) saturate(643%) hue-rotate(168deg) \r\n  brightness(94%) contrast(89%);\r\n  transform: scaleX(-1);\r\n  position: absolute;\r\n  top: -75%;\r\n  margin-left: -114px;\r\n\r\n  @media (min-width: 700px) {\r\n    top: -58%;\r\n    margin-left: -151px;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.section`\r\n  background-color: #222;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.1);\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  padding: 0 0.5em 0.5em 0.5em;\r\n  width: fit-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Notification = styled.div`\r\n  background-color: var(--primary-color);\r\n  padding: 0.5em;\r\n  position: relative;\r\n  text-align: center;\r\n  width: 110%;\r\n\r\n  @media (min-width: 700px) {\r\n    padding: 0.75em;\r\n  }\r\n`;\r\n\r\nexport const BoardContainer = styled.div`\r\n  margin: 0.5em 1.25em;\r\n\r\n  @media (min-width: 700px) {\r\n    margin: 1em;\r\n  }\r\n`;\r\n\r\nexport const Board = styled.table`\r\n  table-layout: fixed;\r\n  width: 250px;\r\n  height: 250px;\r\n`;\r\n\r\nexport const Heading = styled.h1`\r\n  color: var(--primary-color);\r\n  font-size: 1em;\r\n  margin-bottom: 0.15em;\r\n  text-shadow: 2px 2px rgba(0, 0, 0, 0.25);\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 1.5em;\r\n  }\r\n`;\r\n\r\nexport const Cell = styled.td`\r\n  width: 25px;\r\n  height: 25px;\r\n  color: ${(props) => (props.isActive ? 'black' : 'white')};\r\n  border: 2px solid rgba(255, 255, 255, 0);\r\n  background-color: ${(props) =>\r\n    props.isActive ? 'var(--primary-color)' : !props.isLabel ? '#333' : ''};\r\n  font-size: 15px;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  padding: 0;\r\n  margin: 0;\r\n  transition: border 0.2s ease-in;\r\n  user-select: none;\r\n  text-shadow: ${(props) => (props.isLabel ? '3px 3px black' : '')};\r\n  cursor: ${(props) => (props.isInteractive ? 'pointer' : 'auto')};\r\n\r\n  :hover {\r\n    border: 2px solid\r\n      rgba(255, 255, 255, ${(props) => (props.isInteractive ? 1 : 0)});\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 30px;\r\n    height: 30px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n\r\nexport const FlexibleFormat = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 700px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const BlurBackground = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(255, 255, 255, 0.075);\r\n  backdrop-filter: blur(5px);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: var(--primary-color);\r\n  color: black;\r\n  border-radius: 3px;\r\n  padding: 0.5em 1em;\r\n  font-size: 1em;\r\n  margin: ${({ margin }) => margin};\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: filter 0.2s ease-out;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :hover {\r\n    filter: brightness(120%);\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  color: white;\r\n  margin: 1em;\r\n`;\r\n\r\nexport const TooltipContainer = styled.span`\r\n  position: absolute;\r\n  background-color: #222;\r\n  width: 190px;\r\n  border-radius: 20px;\r\n  padding: 0.25em 1em;\r\n  border: 1px solid var(--primary-color);\r\n  border-bottom-left-radius: 0px;\r\n  color: white;\r\n`;\r\n\r\nexport const FooterComponent = styled.div`\r\n\tdisplay: flex;\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tpadding: 0.5rem;\r\n\tfont-family: 'Big Shoulders Text', cursive;\r\n\tbackground: rgb(126, 126, 126);\r\n\tbackground: linear-gradient(\r\n\t\t90deg,\r\n\t\trgba(126, 126, 126, 1) 0%,\r\n\t\trgba(205, 205, 203, 1) 29%,\r\n\t\trgba(181, 181, 181, 1) 76%,\r\n\t\trgba(122, 122, 122, 1) 100%\r\n\t);\r\n\theight: 3rem;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\t& > :first-child {\r\n\t\tmargin-left: auto;\r\n\t\tpadding-right: 1rem;\r\n\t}\r\n\t& > :last-child {\r\n\t\tmargin-right: auto;\r\n\t\tpadding-left: 1rem;\r\n\t}\r\n`;\r\n\r\nexport const FooterText = styled.p`\r\n\tcolor: #000129;\r\n\tmargin: auto 0;\r\n\t& > a {\r\n\t\ttransition: 0.5s;\r\n\t}\r\n\t& > a:link,\r\n\t& > a:active,\r\n\t& > a:visited {\r\n\t\tcolor: #000129;\r\n\t}\r\n\t& > a:hover {\r\n\t\tcolor: #333;\r\n\t\ttransition: 0.5s;\r\n\t}\r\n`;\r\n\r\nexport const FooterLinksDiv = styled.div`\r\n\tdisplay: flex;\r\n\t& > * {\r\n\t\tmargin: auto;\r\n\t}\r\n`;","import React from 'react';\r\n\r\nimport { Nav, Title, Logo } from '../style';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Nav>\r\n      <Title>Battleship</Title>\r\n      <Logo\r\n        src=\"https://static.thenounproject.com/png/44759-200.png\"\r\n        alt=\"Logo\"\r\n      />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport { BoardContainer, Heading, Board, Cell } from '../style';\r\n\r\nconst Gameboard = ({\r\n  title,\r\n  board,\r\n  receivedAttacks,\r\n  clickHandler,\r\n  isLabelled = false,\r\n  isInteractive = false,\r\n  areShipsHidden = false,\r\n}) => {\r\n  const labels = ['', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\r\n\r\n  const getAttack = (x, y) => {\r\n    return receivedAttacks?.find((attack) => attack.x === x && attack.y === y);\r\n  };\r\n\r\n  const getIcon = (x, y) => {\r\n    const attack = getAttack(x, y);\r\n    if (!attack) return;\r\n    return attack.isSuccess ? 'X' : 'O';\r\n  };\r\n\r\n  return (\r\n    <BoardContainer>\r\n      <Heading>{title}</Heading>\r\n      <Board>\r\n        <tbody>\r\n          {isLabelled && (\r\n            <tr>\r\n              {labels.map((label, i) => (\r\n                <Cell key={i} isLabel>\r\n                  {label}\r\n                </Cell>\r\n              ))}\r\n            </tr>\r\n          )}\r\n          {board.map((row, j) => (\r\n            <tr key={j}>\r\n              {isLabelled && (\r\n                <Cell key={j} isLabel>\r\n                  {j}\r\n                </Cell>\r\n              )}\r\n              {row.map((cell, i) => (\r\n                <Cell\r\n                  key={i}\r\n                  isActive={cell && !areShipsHidden}\r\n                  isInteractive={isInteractive && !getAttack(i, j)}\r\n                  onClick={() => {\r\n                    if (isInteractive && !getAttack(i, j)) clickHandler(i, j);\r\n                  }}\r\n                >\r\n                  {getIcon(i, j)}\r\n                </Cell>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Board>\r\n    </BoardContainer>\r\n  );\r\n};\r\n\r\nexport default Gameboard;\r\n","const createGameboard = (size) => {\r\n\tlet gameboard = Array.from({ length: size }, () =>\r\n\t  Array.from({ length: size }, () => 0),\r\n\t);\r\n  \r\n\tconst ships = [];\r\n\tconst attacks = [];\r\n  \r\n\tconst getBoard = () => gameboard;\r\n\tconst getAttacks = () => attacks;\r\n  \r\n\tconst place = (x, y, ship, isHorizontal = true) => {\r\n\t  if ([x, y, ship].includes(undefined)) {\r\n\t\tthrow new Error('Arguments x, y & ship are required');\r\n\t  }\r\n  \r\n\t  if (typeof x !== 'number' || x !== parseInt(x) || x < 0 || x > size - 1) {\r\n\t\tthrow new Error('x coordinate must be an integer between 0-9');\r\n\t  }\r\n  \r\n\t  if (typeof y !== 'number' || y !== parseInt(y) || y < 0 || y > size - 1) {\r\n\t\tthrow new Error('y coordinate must be an integer between 0-9');\r\n\t  }\r\n  \r\n\t  if (\r\n\t\tship === null ||\r\n\t\ttypeof ship !== 'object' ||\r\n\t\tship.length === undefined ||\r\n\t\tship.hit === undefined ||\r\n\t\tship.isSunk === undefined ||\r\n\t\ttypeof ship.length !== 'number' ||\r\n\t\ttypeof ship.hit !== 'function' ||\r\n\t\ttypeof ship.isSunk !== 'function'\r\n\t  ) {\r\n\t\tthrow new Error('ship must be a ship object');\r\n\t  }\r\n  \r\n\t  if (typeof isHorizontal !== 'boolean') {\r\n\t\tthrow new Error('isHorizontal must be a boolean');\r\n\t  }\r\n  \r\n\t  // if ship placed horizontally & it overflows the gameboard, shift it left\r\n\t  // by the required number of places\r\n\t  let xx = isHorizontal\r\n\t\t? x + ship.length > size\r\n\t\t  ? size - ship.length\r\n\t\t  : x\r\n\t\t: x;\r\n  \r\n\t  // if ship placed vertically & it overflows the gameboard, shift it up by\r\n\t  // the required number of places\r\n\t  let yy = !isHorizontal\r\n\t\t? y + ship.length > size\r\n\t\t  ? size - ship.length\r\n\t\t  : y\r\n\t\t: y;\r\n  \r\n\t  const tempBoard = gameboard.map((row) => [...row]);\r\n\t  for (let i = 0; i < ship.length; i++) {\r\n\t\tif (tempBoard[yy][xx]) {\r\n\t\t  throw new Error('This ship overlaps another already placed');\r\n\t\t}\r\n\t\ttempBoard[yy][xx] = ship;\r\n\t\tisHorizontal ? xx++ : yy++;\r\n\t  }\r\n  \r\n\t  gameboard = tempBoard;\r\n\t  ships.push(ship);\r\n  \r\n\t  return gameboard;\r\n\t};\r\n  \r\n\tconst getShipPosition = (x, y, ship) => {\r\n\t  let i = 0;\r\n\t  let j = 0;\r\n\t  // count ship cells to right of passed coordinates\r\n\t  while (gameboard[y][x + i] === ship) i++;\r\n  \r\n\t  if (i > 1) return ship.length - i;\r\n  \r\n\t  // count ship cells below passed coordinates if cell exists at y + j\r\n\t  while (gameboard[y + j] && gameboard[y + j][x] === ship) j++;\r\n  \r\n\t  if (j > 1) return ship.length - j;\r\n  \r\n\t  // otherwise (x, y) is the final cell of the ship\r\n\t  return ship.length - 1;\r\n\t};\r\n  \r\n\tconst receiveAttack = (x, y) => {\r\n\t  if ([x, y].includes(undefined)) {\r\n\t\tthrow new Error('Arguments x & y are required');\r\n\t  }\r\n\t  if (typeof x !== 'number' || x !== parseInt(x) || x < 0 || x > size - 1) {\r\n\t\tthrow new Error('x coordinate must be an integer between 0-9');\r\n\t  }\r\n\t  if (typeof y !== 'number' || y !== parseInt(y) || y < 0 || y > size - 1) {\r\n\t\tthrow new Error('y coordinate must be an integer between 0-9');\r\n\t  }\r\n  \r\n\t  const ship = gameboard[y][x];\r\n  \r\n\t  if (typeof ship === 'object') {\r\n\t\tship.hit(getShipPosition(x, y, ship));\r\n\t\tattacks.push({ x, y, isSuccess: true });\r\n\t\treturn true;\r\n\t  }\r\n\t  attacks.push({ x, y, isSuccess: false });\r\n\t  return false;\r\n\t};\r\n  \r\n\tconst allShipsSunk = () => ships.every((ship) => ship.isSunk());\r\n  \r\n\treturn { getBoard, getAttacks, place, receiveAttack, allShipsSunk };\r\n  };\r\n  \r\n  export default createGameboard;\r\n  ","const createPlayer = (gameboard, player = 'Player', isRobot = false) => {\r\n\tif (gameboard === undefined) throw new Error('A gameboard is required');\r\n  \r\n\tif (Object.prototype.toString.call(gameboard).slice(8, -1) !== 'Object')\r\n\t  throw new Error('The gameboard must be an object');\r\n  \r\n\t// ensure gameboard object contains the listed properties\r\n\tconst {\r\n\t  getBoard,\r\n\t  getAttacks,\r\n\t  place,\r\n\t  receiveAttack,\r\n\t  allShipsSunk,\r\n\t} = gameboard;\r\n  \r\n\t// check properties are defined and are functions\r\n\tif (\r\n\t  getBoard === undefined ||\r\n\t  getAttacks === undefined ||\r\n\t  place === undefined ||\r\n\t  receiveAttack === undefined ||\r\n\t  allShipsSunk === undefined ||\r\n\t  typeof getBoard !== 'function' ||\r\n\t  typeof getAttacks !== 'function' ||\r\n\t  typeof place !== 'function' ||\r\n\t  typeof receiveAttack !== 'function' ||\r\n\t  typeof allShipsSunk !== 'function'\r\n\t) {\r\n\t  throw new Error('gameboard must be a Gameboard object');\r\n\t}\r\n  \r\n\tif (typeof player !== 'string') {\r\n\t  throw new Error('Player name must be a string');\r\n\t}\r\n\tif (typeof isRobot !== 'boolean') {\r\n\t  throw new Error('isRobot must be a boolean');\r\n\t}\r\n  \r\n\t// populate cells coordinate array\r\n\tlet cells = [];\r\n\tgetBoard().forEach((row, x) =>\r\n\t  row.forEach((_, y) => {\r\n\t\tcells.push({ x, y });\r\n\t  }),\r\n\t);\r\n  \r\n\tconst fixedAttack = (x, y) => {\r\n\t  const isSuccess = receiveAttack(x, y);\r\n\t  cells = cells.filter((cell) => !(cell.x === x && cell.y === y));\r\n\t  return isSuccess;\r\n\t};\r\n  \r\n\tconst randomAttack = () => {\r\n\t  const { x, y } = cells[Math.floor(Math.random() * cells.length)];\r\n\t  return fixedAttack(x, y);\r\n\t};\r\n  \r\n\treturn {\r\n\t  getName: () => player,\r\n\t  getType: () => (isRobot ? 'Robot' : 'Human'),\r\n\t  getCells: () => cells,\r\n\t  getBoard: () => gameboard.getBoard(),\r\n\t  takeAttack: isRobot ? fixedAttack : randomAttack,\r\n\t};\r\n  };\r\n  \r\n  export default createPlayer;\r\n  ","const createShip = (length) => {\r\n\tif (typeof length !== 'number') throw new Error('Length must be a number');\r\n\tif (![2, 3, 4, 5].includes(length))\r\n\t  throw new Error('Length can only be 2, 3, 4 or 5');\r\n  \r\n\tconst state = Array.from({ length }, () => 0);\r\n\treturn {\r\n\t  length,\r\n\t  hit: (position) => {\r\n\t\tif (typeof position !== 'number')\r\n\t\t  throw new Error('Position must be a number');\r\n\t\tif (position < 0 || position !== parseInt(position))\r\n\t\t  throw new Error('Position must be a positive integer');\r\n\t\tif (position >= length)\r\n\t\t  throw new Error('Position must be less than length');\r\n\t\tstate[position] = 1;\r\n\t\treturn state;\r\n\t  },\r\n\t  isSunk: () => {\r\n\t\treturn state.reduce((sum, el) => sum + el) === length;\r\n\t  },\r\n\t};\r\n  };\r\n  \r\n  export default createShip;\r\n  ","import React, { useState, useEffect } from 'react';\r\n\r\nimport Gameboard from './Gameboard';\r\n\r\nimport createGameboard from '../factories/createGameboard';\r\nimport createPlayer from '../factories/createPlayer';\r\nimport createShip from '../factories/createShip';\r\n\r\nimport { Container, Notification, FlexibleFormat } from '../style';\r\n\r\nconst Game = ({ size, endGame, gameboard }) => {\r\n  const [gameboards, setGameboards] = useState({\r\n    human: gameboard ?? createGameboard(size),\r\n    robot: createGameboard(size),\r\n  });\r\n\r\n  const { human, robot } = {\r\n    human: createPlayer(gameboards.human, 'Your Waters', false),\r\n    robot: createPlayer(gameboards.robot, 'Enemy Waters', true),\r\n  };\r\n\r\n  const [isHumanTurn, setIsHumanTurn] = useState(true);\r\n\r\n  const [attacks, setAttacks] = useState({ human: [], robot: [] });\r\n\r\n  useEffect(() => {\r\n    [5, 4, 3, 3, 2].forEach((length) => {\r\n      let hasPlaced = false;\r\n      while (!hasPlaced) {\r\n        try {\r\n          const x = Math.floor(Math.random() * 10);\r\n          const y = Math.floor(Math.random() * 10);\r\n          const isHor = Math.random() > 0.5;\r\n          gameboards.robot.place(x, y, createShip(length), isHor);\r\n          hasPlaced = true;\r\n        } catch (e) {}\r\n      }\r\n    });\r\n\r\n    setGameboards({\r\n      human: gameboards.human,\r\n      robot: gameboards.robot,\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const checkGameOver = () => {\r\n    if (gameboards.human.allShipsSunk()) endGame(false);\r\n    if (gameboards.robot.allShipsSunk()) endGame(true);\r\n  };\r\n\r\n  const robotMove = () => {\r\n    setTimeout(() => {\r\n      human.takeAttack();\r\n      setAttacks({\r\n        human: gameboards.human.getAttacks(),\r\n        robot: gameboards.robot.getAttacks(),\r\n      });\r\n      setIsHumanTurn(true);\r\n    }, 1000);\r\n  };\r\n\r\n  const clickHandler = (i, j) => {\r\n    if (!isHumanTurn) return;\r\n    robot.takeAttack(i, j);\r\n    setAttacks({\r\n      human: gameboards.human.getAttacks(),\r\n      robot: gameboards.robot.getAttacks(),\r\n    });\r\n    setIsHumanTurn(false);\r\n    robotMove();\r\n    checkGameOver();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Notification>\r\n        {isHumanTurn\r\n          ? 'It is your turn, fire a shot at enemy waters!'\r\n          : 'The enemy is taking their shot!'}\r\n      </Notification>\r\n      <FlexibleFormat>\r\n        <Gameboard\r\n          size={size}\r\n          title={human.getName()}\r\n          board={gameboards.human.getBoard()}\r\n          receivedAttacks={attacks.human}\r\n          clickHandler={clickHandler}\r\n        />\r\n        <Gameboard\r\n          size={size}\r\n          title={robot.getName()}\r\n          board={gameboards.robot.getBoard()}\r\n          receivedAttacks={attacks.robot}\r\n          areShipsHidden={true}\r\n          isInteractive={true}\r\n          clickHandler={clickHandler}\r\n        />\r\n      </FlexibleFormat>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState } from 'react';\r\n\r\nimport Gameboard from '../components/Gameboard';\r\nimport createGameboard from '../factories/createGameboard';\r\nimport createShip from '../factories/createShip';\r\n\r\nimport MouseTooltip from 'react-sticky-mouse-tooltip';\r\n\r\nimport { Container, Notification, Button, TooltipContainer } from '../style';\r\n\r\nconst Menu = ({ size, startGame }) => {\r\n  const [gameboard, setGameboard] = useState(createGameboard(size));\r\n  const [ships, setShips] = useState([5, 4, 3, 3, 2]);\r\n  const [isHorizontal, setIsHorizontal] = useState(true);\r\n  const [isFinishedPlacing, setIsFinishedPlacing] = useState(false);\r\n  const [isInteractive, setIsInteractive] = useState(true);\r\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\r\n\r\n  const swapAxis = () => setIsHorizontal(!isHorizontal);\r\n\r\n  const start = () => {\r\n    setIsInteractive(false);\r\n    setIsFinishedPlacing(true);\r\n    setTimeout(() => startGame(gameboard), 1000);\r\n  };\r\n\r\n  const handleClick = (x, y) => {\r\n    const tempGameboard = { ...gameboard };\r\n    try {\r\n      tempGameboard.place(x, y, createShip(ships[0]), isHorizontal);\r\n      setGameboard(tempGameboard);\r\n      setShips(ships.slice(1));\r\n      if (ships.length === 1) start();\r\n    } catch (e) {\r\n      setIsTooltipVisible(true);\r\n      setTimeout(() => setIsTooltipVisible(false), 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Notification>Set up your Game Board!</Notification>\r\n      <Gameboard\r\n        size={size}\r\n        board={gameboard.getBoard()}\r\n        isLabelled={true}\r\n        isInteractive={isInteractive}\r\n        clickHandler={handleClick}\r\n        areShipsHidden={false}\r\n      />\r\n      <Button margin=\"0 0 0.5em 0\" onClick={swapAxis}>\r\n        {isHorizontal ? 'Vertical' : 'Horizontal'}\r\n      </Button>\r\n      <MouseTooltip visible={isTooltipVisible} offsetX={10} offsetY={-35}>\r\n        <TooltipContainer width=\"190px\">\r\n          Can't place ship here!\r\n        </TooltipContainer>\r\n      </MouseTooltip>\r\n      <MouseTooltip visible={isFinishedPlacing} offsetX={10} offsetY={-35}>\r\n        <TooltipContainer width=\"150px\">Game Starting!</TooltipContainer>\r\n      </MouseTooltip>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\n\r\nimport {\r\n  BlurBackground,\r\n  Container,\r\n  Notification,\r\n  Button,\r\n  Text,\r\n} from '../style';\r\n\r\nconst GameOver = ({ isHumanWinner, startGame }) => {\r\n  return (\r\n    <BlurBackground>\r\n      <Container>\r\n        <Notification>Game Over</Notification>\r\n        <Text>\r\n          {isHumanWinner\r\n            ? 'Congratulations - You are the winner!'\r\n            : 'Unlucky - The enemy won!'}\r\n        </Text>\r\n        <Button onClick={startGame} margin=\"0 0 0.5em 0\">\r\n          New Game\r\n        </Button>\r\n      </Container>\r\n    </BlurBackground>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SVG = styled.svg`\r\n\ttransition: 0.5s;\r\n\t&:hover {\r\n\t\tfill: black;\r\n\t\ttransition: 0.5s;\r\n\t}\r\n`;\r\n\r\nfunction SvgGithub(props) {\r\n\treturn (\r\n\t\t<a href='https://github.com/ethanlee-lzm'>\r\n\t\t\t<SVG\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\tviewBox='0 0 512 512'\r\n\t\t\t\theight='2rem'\r\n\t\t\t\twidth='2rem'\r\n\t\t\t\tfill='#555'\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<path d='M255.968 5.329C114.624 5.329 0 120.401 0 262.353c0 113.536 73.344 209.856 175.104 243.872 12.8 2.368 17.472-5.568 17.472-12.384 0-6.112-.224-22.272-.352-43.712-71.2 15.52-86.24-34.464-86.24-34.464-11.616-29.696-28.416-37.6-28.416-37.6-23.264-15.936 1.728-15.616 1.728-15.616 25.696 1.824 39.2 26.496 39.2 26.496 22.848 39.264 59.936 27.936 74.528 21.344 2.304-16.608 8.928-27.936 16.256-34.368-56.832-6.496-116.608-28.544-116.608-127.008 0-28.064 9.984-51.008 26.368-68.992-2.656-6.496-11.424-32.64 2.496-68 0 0 21.504-6.912 70.4 26.336 20.416-5.696 42.304-8.544 64.096-8.64 21.728.128 43.648 2.944 64.096 8.672 48.864-33.248 70.336-26.336 70.336-26.336 13.952 35.392 5.184 61.504 2.56 68 16.416 17.984 26.304 40.928 26.304 68.992 0 98.72-59.84 120.448-116.864 126.816 9.184 7.936 17.376 23.616 17.376 47.584 0 34.368-.32 62.08-.32 70.496 0 6.88 4.608 14.88 17.6 12.352C438.72 472.145 512 375.857 512 262.353 512 120.401 397.376 5.329 255.968 5.329z' />\r\n\t\t\t</SVG>\r\n\t\t</a>\r\n\t);\r\n}\r\n\r\nexport default SvgGithub;","import { FooterLinksDiv } from '../style';\r\nimport Github from './logos/Github';\r\nimport React from 'react';\r\n\r\nfunction FooterLinks() {\r\n\treturn (\r\n\t\t<FooterLinksDiv>\r\n\t\t\t<Github />\r\n\t\t</FooterLinksDiv>\r\n\t);\r\n}\r\n\r\nexport default FooterLinks;\r\n","import { FooterComponent, FooterText } from '../style';\r\nimport FooterLinks from './FooterLinks';\r\nimport React from 'react';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<FooterComponent>\r\n\t\t\t<FooterLinks />\r\n\t\t\t<FooterText>\r\n\t\t\t\tCopyright © 2021 ethanlee-lzm\r\n\t\t\t</FooterText>\r\n\t\t</FooterComponent>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport Header from './Header';\r\nimport Game from './Game';\r\nimport Menu from './Menu';\r\n\r\nimport { GlobalStyle } from '../style';\r\nimport GameOver from './GameOver';\r\nimport Footer from './Footer';\r\n\r\nconst App = () => {\r\n  const [gameState, setGameState] = useState({\r\n    start: true,\r\n    game: false,\r\n    end: false,\r\n    gameboard: undefined,\r\n    isHumanWinner: undefined,\r\n  });\r\n\r\n  const startMenu = () => {\r\n    setGameState({\r\n      start: true,\r\n      game: false,\r\n      end: false,\r\n      gameboard: undefined,\r\n      isHumanWinner: undefined,\r\n    });\r\n  };\r\n\r\n  const startGame = (gameboard) => {\r\n    setGameState({\r\n      start: false,\r\n      game: true,\r\n      end: false,\r\n      gameboard,\r\n      isHumanWinner: undefined,\r\n    });\r\n  };\r\n\r\n  const endGame = (isHumanWinner) => {\r\n    setGameState({\r\n      start: false,\r\n      game: true,\r\n      end: true,\r\n      isHumanWinner,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyle />\r\n      <Header />\r\n      {gameState.start && <Menu size={10} startGame={startGame} />}\r\n      {gameState.game && (\r\n        <Game size={10} endGame={endGame} gameboard={gameState.gameboard} />\r\n      )}\r\n      {gameState.end && (\r\n        <GameOver\r\n          isHumanWinner={gameState.isHumanWinner}\r\n          startGame={startMenu}\r\n        />\r\n      )}\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}